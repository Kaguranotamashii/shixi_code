import os
import requests
import pandas as pd


# 定义一个清理文件名的函数，确保文件名不会包含非法字符
def clean_filename(filename):
    return "".join(c if c.isalnum() else "_" for c in filename)


# 设置存放音频文件的目录
output_dir = "output_audio"
os.makedirs(output_dir, exist_ok=True)

# 初始化一个 DataFrame 用于保存文本和音频链接
df = pd.DataFrame(columns=['Text', 'Audio Link'])

# 定义多行字符串，表示要请求的文本，每行一段内容
multi_line_text = """
小美：你觉得我们是不是应该更进一步了？小杰：我也这么想，但我有点紧张。
老王：对最近的选举有什么看法？小李：我觉得候选人的政策都不够具体。
小张：你准备怎么复习这次考试？小赵：我想先整理笔记，然后做些练习题。
小陈：我们下次旅行去哪里好呢？小林：我一直想去日本，你觉得怎么样？
小刘：你周末打算怎么过？小黄：我想带家人去郊外野餐。
小杨：你相信一见钟情吗？小吴：我相信，但我更相信日久生情。
小周：你对国际形势怎么看？小郑：我觉得合作比对抗更有利于发展。
小孙：你最近在学什么新技能？小钱：我在尝试学习编程。
小冯：你上次旅行有什么特别经历吗？小褚：我在巴黎差点迷路了，但最后找到了埃菲尔铁塔。
小卫：你家里最近有什么新鲜事？小蒋：我弟弟刚考上大学，全家都很高兴。
小沈：你觉得恋爱中最重要的是什么？小韩：我觉得是信任和沟通。
小杨：你对环保政策有什么建议？小朱：我认为应该加强公众教育，提高环保意识。
小秦：你有什么学习法推荐吗？小尤：我觉得定期复习很重要。
帮我会议设备重新调试。
帮我会议环境调整到明亮宽敞。
帮我会议议题简化处理。
原以为自己已经放下了，直到看到那张熟悉的照片，才发现心里依旧疼痛难忍。
独自坐在咖啡馆的角落，望着窗外的细雨，感受到一种无法言喻的孤独。
看着旧时的照片，那些曾经熟悉的面孔，如今却都变得遥不可及。
曾经说好一起走到最后的人，如今却走散在时间的洪流中，留下的只有无尽的遗憾。
今天收到一封老朋友的信，读到最后才知道他已经不在了，心里的痛像被针刺一般。
想到已经好久没有联系的朋友，翻遍了通讯录却不敢拨出那个号码。
今天在家里翻出一件旧衣服，满是回忆，穿在身上却再也找不回当初的感觉。
曾经热闹的群聊如今只剩下零星的几句话，曾经的我们到底去了哪里？
原本热闹的家庭聚会，因为少了一个重要的人而显得格外冷清。
收拾房间时，意外发现了一封旧信，读完后心情沉重了许多。
今天在路上看到一对牵手的老人，突然想起了自己已经离世的外公外婆，心里难过得无以复加。
昨晚做了一个美好的梦，梦中和他重逢了，醒来时泪水湿透了枕头，好伤心。
今天在街上偶遇了一位老同学，互相微笑点头后，却再也没有说出一句话，心里说不出的落寞。
突然发现朋友圈里某位常常互动的朋友消失了，翻看他最后的动态，才知道他已经离开了这个世界。
今天整理老家的旧物，发现了一本小时候的日记，那时的无忧无虑仿佛是另一个世界。
午后看了一场电影，剧情不紧不慢，节奏适中。
今天的会议讨论了几个问题，结论也在意料之中。
整理了电脑里的文件，和往常一样。
这杯茶水的温度刚好，能喝。
出门前检查了天气，和预报的一样，没有太多变化。
早晨起床后，拉开窗帘，阳光照进来，暖意刚好。
中午在街边小店吃了顿饭，味道很普通，没什么特别的。
收到了一封短信，内容是例行通知，没有引起特别的注意。
早上散步回来，空气清新，但也没什么特别的感受。
读了一篇博客，内容很实用，但也没什么新意。
下午的时间在阅读中度过，书中的内容平实，有点小收获。
今天下班回家，发现房间里依旧只有我一个人，空荡荡的感觉让人无法忍受伤感。
曾经一起畅谈未来的朋友，如今却成了陌路人，心里满是难以言说的痛。
今天在公园里看到一对老夫妻，想起了自己的父母，他们却再也无法牵手走在一起了。
昨天夜里失眠了，脑海里不断浮现出那些曾经的画面，心里满是无法排解的痛苦。
收到朋友发来的一张合照，照片里的人已经不在了，心里一阵难过。
今天看到一则旧时的新闻，才知道那个曾经和我一起奋斗的人已经去世了，心里难以承受。
在网上看到了朋友的婚礼照片，心里却满是无法言说的失落与痛苦。
今天在家里翻出了一本老相册，翻看时泪水止不住地流了下来，心里满是怀念与感伤。
走在街上看到一个熟悉的身影，心跳加速地追上去，才发现认错了人，心里满是难以言说的失落。
今天和家人通了电话，听到他们的声音心里满是酸楚，已经很久没有回家陪他们了。
在公司里看着那些熟悉的面孔，突然意识到自己已经在这里待了这么多年，心里满是感慨与伤感。
今天收到了一张朋友的结婚请柬，看到他脸上的笑容，心里却满是失落与痛苦。
昨晚梦到了已经去世的亲人，梦里我们又回到了从前，醒来时心里满是悲伤。
每天起床，我都会微笑迎接新的一天。
无论是晴天还是雨天，我都会保持积极心态。
努力工作，不断学习，是我克服困难的方式。
保持健康的生活习惯，如按时吃饭和适量运动。
充足睡眠让我精力充沛，迎接每一个挑战。
实现目标，无论是个人成长还是职业发展。
因为我相信耐心和不放弃的力量。
勇敢面对挫折，从中吸取教训，继续前进。
失败是成功之母，每一次跌倒都是成长的机会。
珍惜时间，合理规划日程，确保陪伴家人。
家庭和友情是我最宝贵的财富，我会用行动去关爱。
坚定不移
随时随地
全力以赴
丰富多彩
余波未平
算法
数据结构
人工智能
机器学习
深度学习
神经网络
大数据
云计算
物联网
区块链
网络安全
软件工程
操作系统
数据库
编程语言
计算机视觉
自然语言处理
人机交互
虚拟现实
增强现实
量子计算
信息检索
数据挖掘
知识图谱
软件测试
系统分析
项目管理
敏捷开发
金融工程
投资组合
风险管理
财务分析
会计学
市场营销
经济学
管理学
国际贸易
货币银行学
证券投资
保险学
税收筹划
企业战略
人力资源
供应链管理
运营管理
商业智能
电子商务
消费者行为
品牌管理
市场调研
论文写作
学术研究
文献综述
研究方法
数据分析
统计学
实验设计
定量研究
定性研究
案例研究
学术伦理
学术出版
学术会议
学术交流
博士论文
硕士论文
本科论文
学位论文
开题报告
中期报告
答辩
学术期刊
学术专著
细胞生物学
分子生物学
遗传学
生态学
进化生物学
微生物学
植物学
动物学
解剖学
生理学
生物化学
生物物理学
免疫学
发育生物学
神经生物学
行为学
基因组学
蛋白质组学
代谢组学
转录组学
表观遗传学
系统生物学
生物信息学
生物工程
生物技术
生物多样性
保护生物学
环境生物学
海洋生物学
古生物学
药理学
毒理学
病理学
临床生物学
摘要
分析
论证
评估
偏差
案例研究
引用
连贯性
结论
概念
相关性
数据
演绎
定义
设计
论文
经验
认识论
评价
证据
实验
阐述
框架
概括
假设
推理
解释
论证
文献综述
逻辑
方法论
模型
范式
同行评审
视角
现象
理论
原理
结构
知识体系
定性分析
定量分析
范畴
论点
议题
信度
效度
假说
模式
变量
对照组
影响因素
权威
统计
实证研究
因果关系
样本
变量控制
参考文献
系统论
归纳法
认知
社会结构
社会学
伦理学
美学
修辞
语义学
音位学
文法
形态学
语用学
心理学
语言学
思辨
文化
变迁
创新
历史背景
社会变革
文化认同
理念
社会互动
意识形态
权力结构
话语分析
社会阶层
公共政策
全球化
伦理道德
学术规范
研究方法
实验设计
科学方法
数据处理
学术批评
知识产权
思想体系
学术写作
概念框架
"""

# API的URL和默认的音频文件命名种子
api_url = 'http://10.27.0.2:50001/api/inference/sft'
audio_seed = 1
role='中文男'
# 遍历每行文本
for line in multi_line_text.strip().split('\n'):
    # 去除两边的空白字符（包括换行符）
    line = line.strip()

    # 如果该行文本不为空，继续处理
    if line:
        # 准备发送给API的请求数据
        data = {
            'tts': line,
            'role': role
        }

        # 向API发送POST请求
        response = requests.post(api_url, data=data, headers={'Content-Type': 'application/x-www-form-urlencoded'})

        # 检查请求是否成功
        if response.status_code == 200:
            # 清理文本以创建有效的音频文件名
            clean_line = clean_filename(line)
            audio_file_name = os.path.join(output_dir, f"{str(audio_seed)}_{role}_{clean_line}.mp3")

            # 保存音频数据到文件
            with open(audio_file_name, 'wb') as f:
                f.write(response.content)

            print(f"音频保存至 {audio_file_name}")

            # 创建音频文件的超链接，用于插入到Excel中
            audio_link = f'=HYPERLINK("{audio_file_name}", "Play Audio")'

            # 将文本和超链接添加到 DataFrame
            new_row = pd.DataFrame({'Text': [line], 'Audio Link': [audio_link]})
            df = pd.concat([df, new_row], ignore_index=True)

            # 增加音频文件命名种子，以确保文件名唯一
            audio_seed += 1
        else:
            # 请求失败时打印错误信息
            print(f"获取音频失败，文本内容: {line}")

# 保存最终的 DataFrame 到 Excel 文件
df.to_excel("output_audio_"+role+"_links.xlsx", index=False)
