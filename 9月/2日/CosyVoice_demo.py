import os
import requests
import pandas as pd


# 定义一个清理文件名的函数，确保文件名不会包含非法字符
def clean_filename(filename):
    return "".join(c if c.isalnum() else "_" for c in filename)


# 设置存放音频文件的目录
output_dir = "output_audio"
os.makedirs(output_dir, exist_ok=True)

# 初始化一个 DataFrame 用于保存文本和音频链接
df = pd.DataFrame(columns=['Text', 'Audio Link'])

# 定义多行字符串，表示要请求的文本，每行一段内容
multi_line_text = """
こんにちは、私の名前はキミです。
おはようございます、今日はいい天気ですね。
こんばんは、今日のお仕事はいかがでしたか？
ありがとう、大変助かります。
すみません、ちょっとお時間ありますか？
はい、わかりました。
いいえ、それはちょっとできません。
さようなら、また明日。
元気ですか、最近いかがですか？
楽しかったです、また遊ばに行きましょう。
おいしいですね、どこで買ったのですか？
雨が降っていますね、傘をお持ちですか？
寒いですね、コートを着てください。
暑い日が続いていますね。
風が強いですね、注意してください。
雪が降るのを楽しみにしています。
花が咲いた、春が来たのですね。
葉が落ちて、秋が深まっています。
月が綺麗ですね、今夜は散歩しませんか？
星がキラキラしています、綺麗ですね。
鳥のさえずりが聞こえる、朝ですね。
猫が可愛いですね、飼っていますか？
犬は忠実な動物ですね。
魚は水中を優雅に泳いでいます。
公園で遊ぶ子供たちが可愛らしいですね。
スーパーマーケットはにぎやかですね。
ライブラリーで本を読みませんか？
映画館で新しい映画を見ませんか？
コンサートに行きましょう。
スポーツジムで運動しましょう。
駅は混雑していますね。
新幹線に乗って遠出しましょう。
バスが遅れてしまいました。
タクシーを呼びましょうか？
自転車で通学しています。
歩いて行きます、健康に良いですよ。
空港は広くて混雑しています。
ホテルのチェックインを済ませましたか？
旅行は楽しいですね、どこへ行きましたか？
荷物は重いですね、手伝いましょうか？
食事はいかがでしたか？おいしかったですか？
このレストランの雰囲気が素敵ですね。
おすすめのメニューは何ですか？
お茶を飲みませんか？
今日のニュースは何ですか？
音楽を聞いていますか？好きなアーティストはいますか？
テレビを観ていますか？現在何が放送されていますか？
音楽会に行きませんか？
舞台に立ちますか？私も行きたいです。
展覧会はいつ開催されますか？
図書館で勉強しています。
試験が終わったので、リラックスできます。
勉強は忙しいですね、頑張ってください。
テストは難しかったですか？
夏休みはいかが計画されていますか？
冬休みはどこかに行きたいですか？
家にいますか？还是在りますか？
家族は元気ですか？
友達と会いましたか？
学校は忙しいですか？
先週のテストはどうでしたか？
授業は興味深かったですか？
図書館の本を返却しましたか？
宿題は終わりましたか？
英語の会話は苦手ですか？
数学の問題は解決できましたか？
科学の実験は面白かったですか？
歴史の授業は興味がありますか？
体育の授業で何をしましたか？
音楽の授業で歌いましたか？
美術の授業で何を描きましたか？
パソコンは使いこなせますか？
インターネットで何をしていますか？
メールをチェックしましたか？
ソーシャルメディアで友達と連絡していますか？
ゲームはよく遊ぶですか？
漫画を読みますか？おすすめのタイトルはありますか？
小説を読むのが好きですか？
料理は得意ですか？おすすめのレシピはありますか？
手料理を作ってみませんか？
買い物は好きですか？おすすめの店はありますか？
散歩は健康に良いですね。
ジョギングは続けていますか？
ヨガを始めませんか？
テニスをしますか？一緒に遊ぶことができますか？
スキーに行きたいです。
サイクリングは楽しいですね。
旅行は楽しいですが、荷物は準備できましたか？
ホテルに予約は済ませましたか？
航空券は買いましたか？
カメラは持参しますか？景色を撮影しましょう。
ガイドブックは持っていますか？
現地の言葉は少しわかりますか？
現地の食べ物は美味しそうですね。
現地の文化について知りたいですか？
見学は計画されていますか？
現地のイベントはありますか？
現地のショッピングモールはありますか？
現地の伝統的な祭りはありますか？
旅行の思い出は大切にしていますか？
"""

# API的URL和默认的音频文件命名种子
api_url = 'http://10.27.0.2:50001/api/inference/sft'
audio_seed = 1
role='日语男'
# 遍历每行文本
for line in multi_line_text.strip().split('\n'):
    # 去除两边的空白字符（包括换行符）
    line = line.strip()

    # 如果该行文本不为空，继续处理
    if line:
        # 准备发送给API的请求数据
        data = {
            'tts': line,
            'role': role
        }

        # 向API发送POST请求
        response = requests.post(api_url, data=data, headers={'Content-Type': 'application/x-www-form-urlencoded'})

        # 检查请求是否成功
        if response.status_code == 200:
            # 清理文本以创建有效的音频文件名
            clean_line = clean_filename(line)
            audio_file_name = os.path.join(output_dir, f"{str(audio_seed)}_{role}_{clean_line}.mp3")

            # 保存音频数据到文件
            with open(audio_file_name, 'wb') as f:
                f.write(response.content)

            print(f"音频保存至 {audio_file_name}")

            # 创建音频文件的超链接，用于插入到Excel中
            audio_link = f'=HYPERLINK("{audio_file_name}", "Play Audio")'

            # 将文本和超链接添加到 DataFrame
            new_row = pd.DataFrame({'Text': [line], 'Audio Link': [audio_link]})
            df = pd.concat([df, new_row], ignore_index=True)

            # 增加音频文件命名种子，以确保文件名唯一
            audio_seed += 1
        else:
            # 请求失败时打印错误信息
            print(f"获取音频失败，文本内容: {line}")

# 保存最终的 DataFrame 到 Excel 文件
df.to_excel("output_audio_"+role+"_links.xlsx", index=False)
